<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hy.mapper.score.ActualScoreMapper">

  <!-- 과목명까지 포함된 결과 매핑 (ResultMap 설정) -->
  <resultMap id="ActualScoreWithSubject" type="com.hy.dto.score.ActualScore">
    <result property="memberNo" column="member_no"/>
    <result property="examTypeId" column="exam_type_id"/>
    <result property="subjectId" column="subject_id"/>
    <result property="actualScore" column="actual_score"/>
    <result property="actualLevel" column="actual_level"/>
    <result property="actualPercentage" column="actual_percentage"/>
    <result property="actualRank" column="actual_rank"/>
    <result property="subjectName" column="subject_name"/>
    <result property="examTypeName" column="exam_type"/>
  </resultMap>
  
  	<!-- 성적 삽입 -->
  <insert id="insertActualScore" parameterType="com.hy.dto.score.ActualScore">
    INSERT INTO actual_score (
      member_no, exam_type_id, subject_id, actual_score, actual_level, actual_percentage, actual_rank
    )
    VALUES (
      #{memberNo}, #{examTypeId}, #{subjectId}, #{actualScore}, #{actualLevel}, #{actualPercentage}, #{actualRank}
    )
  </insert>

	 <!--  -->
<select id="countByMemberAndExamType" resultType="int">
  SELECT COUNT(*) 
  FROM actual_score 
  WHERE member_no = #{memberNo} AND exam_type_id = #{examTypeId}
</select>
  
  
  <select id="countActualScoreByMemberAndExamType" parameterType="map" resultType="int">
	  SELECT COUNT(*)
	  FROM actual_score
	  WHERE member_no = #{memberNo}
	    AND exam_type_id = #{examTypeId}
	</select>
  

  <!-- 시험 분류와 사용자 번호로 성적 조회 -->
  <select id="selectActualScoresByMemberAndExam" resultMap="ActualScoreWithSubject" parameterType="map">
    SELECT A.*, S.subject_name, E.exam_type 
FROM actual_score A 
	 inner join 
     subject S
	 on A.subject_id = S.subject_id 
     inner join
     exam_type E
     on A.exam_type_id = E.exam_type_id
WHERE A.member_no = #{memberNo} AND A.exam_type_id = #{examTypeId}
  </select>
  
  
  
   <!-- 시험 분류 학년별 조회 -->
  <select id="selectExamTypesByGrade" resultType="com.hy.dto.score.ExamType" parameterType="int">
    SELECT
      exam_type_id AS examTypeId,
      member_grade AS memberGrade,
      exam_type AS examType
    FROM exam_type
    WHERE member_grade = #{memberGrade}
    ORDER BY exam_type
  </select>

  <!-- 입력된 목표 성적이 있는 시험 목록 조회 -->
  <select id="selectAvailableExamTypeIds" resultType="int" parameterType="int">
    SELECT DISTINCT exam_type_id
    FROM actual_score
    WHERE member_no = #{param1}
  </select>

  <!-- 기존 목표 성적 삭제 -->
  <delete id="deleteActualScoresByMemberAndExam" parameterType="map">
    DELETE FROM actual_score
    WHERE member_no = #{memberNo}
      AND exam_type_id = #{examTypeId}
</delete>

	<!-- 과목명과 목표성적의 원점수, 성적의 원점수 select -->
	<select id="selectGoalAndActualScores" resultType="com.hy.dto.score.ScoreCompare">
		SELECT 
		  S.subject_name AS subjectName,                     -- 과목명
		  IFNULL(G.target_score, 0) AS goalScore,            -- 목표 점수 (없으면 0)
		  IFNULL(A.actual_score, 0) AS actualScore           -- 실제 점수 (없으면 0)
		FROM subject S
		LEFT JOIN goal_score G 
		  ON S.subject_id = G.subject_id 
		  AND G.member_no = #{memberNo}
		  AND G.exam_type_id = #{examTypeId}
		LEFT JOIN actual_score A 
		  ON S.subject_id = A.subject_id 
		  AND A.member_no = #{memberNo}
		  AND A.exam_type_id = #{examTypeId}
		WHERE 
		  (G.goal_score_id IS NOT NULL OR A.actual_score_id IS NOT NULL)
	</select>



</mapper>


